schema: ../schema.graphqls

generates:
  LegacyGraphQLTypes.java:
    plugins:
      - add: // THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      - java
    config:
      className: LegacyGraphQLTypes
  LegacyGraphQLDataFetchers.java:
    plugins:
      - add: // THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      - java-resolvers
    config:
      className: LegacyGraphQLDataFetchers

config:
  package: org.opentripplanner.ext.legacygraphqlapi.generated
  typesPrefix: LegacyGraphQL
  scalars:
    ID: graphql.relay.Relay.ResolvedGlobalId
    Long: Long
    Polyline: String
  mappers:
    Agency: org.opentripplanner.model.Agency#Agency
    Alert: org.opentripplanner.routing.alertpatch.AlertPatch#AlertPatch
    AlertCauseType: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLAlertCauseType#LegacyGraphQLAlertCauseType
    AlertEffectType: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLAlertEffectType#LegacyGraphQLAlertEffectType
    AlertSeverityLevelType: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLAlertSeverityLevelType#LegacyGraphQLAlertSeverityLevelType
    BikePark: org.opentripplanner.routing.bike_park.BikePark#BikePark
    BikeRentalStation: org.opentripplanner.routing.bike_rental.BikeRentalStation#BikeRentalStation
    BikesAllowed: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLBikesAllowed#LegacyGraphQLBikesAllowed
    CarPark: Object
    Cluster: Object
    Coordinates: org.locationtech.jts.geom.Coordinate#Coordinate
    debugOutput: org.opentripplanner.api.resource.DebugOutput#DebugOutput
    DepartureRow: Object
    elevationProfileComponent: org.opentripplanner.common.geometry.PackedCoordinateSequence#PackedCoordinateSequence
    fare: org.opentripplanner.routing.core.Fare#Fare
    fareComponent: org.opentripplanner.routing.core.FareComponent#FareComponent
    Feed: org.opentripplanner.model.FeedInfo#FeedInfo
    Geometry: org.opentripplanner.util.model.EncodedPolylineBean#EncodedPolylineBean
    Itinerary: org.opentripplanner.model.plan.Itinerary#Itinerary
    Leg: org.opentripplanner.model.plan.Leg#Leg
    Mode: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLMode#LegacyGraphQLMode
    PageInfo: Object
    Pattern: org.opentripplanner.model.TripPattern#TripPattern
    PickupDropoffType: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLPickupDropoffType#LegacyGraphQLPickupDropoffType
    Place: Object
    placeAtDistance: Object
    placeAtDistanceConnection: Object
    placeAtDistanceEdge: Object
    Plan: org.opentripplanner.model.routing.RoutingResponse#RoutingResponse
    RealtimeState: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLRealtimeState#LegacyGraphQLRealtimeState
    Route: org.opentripplanner.model.Route#Route
    serviceTimeRange: Object
    step: org.opentripplanner.model.plan.WalkStep#WalkStep
    Stop: org.opentripplanner.model.Stop#Stop
    stopAtDistance: org.opentripplanner.graph_builder.module.NearbyStopFinder.StopAtDistance#StopAtDistance
    stopAtDistanceConnection: Object
    stopAtDistanceEdge: Object
    Stoptime: org.opentripplanner.model.TripTimeShort#TripTimeShort
    StoptimesInPattern: org.opentripplanner.model.StopTimesInPattern#StopTimesInPattern
    TicketType: org.opentripplanner.routing.core.FareRuleSet#FareRuleSet
    TranslatedString: java.util.Map#Map.Entry<String, String>
    Trip: org.opentripplanner.model.Trip#Trip
    VertexType: org.opentripplanner.ext.legacygraphqlapi.generated.LegacyGraphQLTypes.LegacyGraphQLVertexType#LegacyGraphQLVertexType
