# Pipeline for after pull request has been approved and development branch has been merged to release branch
trigger:
  - resesok-otp
pool: 'TJP'

variables:
  dockerRegistryServiceConnection: 'TJPCRPROD'
  buildVersion: '0.1.$(Build.BuildId)'
  keyVaultName: 'TJP-INFRA-KV-DEV'
  dockerRegistry: 'TJPCRPROD'
  azureSubscription: 'TJPDevOps-CN'
  otpVersion: ''

steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - task: DownloadSecureFile@1
    displayName: 'Copy Maven authorization for Skånetrafiken Maven repository'
    name: settingsSecurity
    inputs:
      secureFile: settings-security.xml

  - bash: echo $(cp -p $(settingsSecurity.secureFilePath) /tmp/settings-security.xml)
    displayName: 'Copy Maven authorization configuration to Maven home directory'

  - task: JavaToolInstaller@0
    displayName: 'Use JDK 11'
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

    # Exports otpVersion as pipeline variable
  - bash: docker-build/azure-deploy/version-check.sh
    displayName: 'Check if new version is valid'

  - task: Maven@3
    displayName: 'Publish artifact with version number to Skånetrafiken Maven repository'
    inputs:
      goals: 'clean package deploy'
      options: '-Pjunit-report --settings docker-build/azure-deploy/settings.xml -Dsettings.security=/tmp/settings-security.xml -B -U'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      mavenOptions: '-Xmx1G' # Build agents are limited to 2Gb

  - bash: docker-build/azure-deploy/git-version.sh
    displayName: 'Create new git tag with current version'
    env:
      DEVOPS_ACCESSTOKEN: $(System.AccessToken)
      OTP_VERSION: $(otpVersion)

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'
      reportDirectory: $(System.DefaultWorkingDirectory)/target/site/jacoco-ut/**/*.*
      summaryFileLocation: $(System.DefaultWorkingDirectory)/target/site/jacoco-ut/jacoco.xml

  - template: templates/deployment_steps.yaml
