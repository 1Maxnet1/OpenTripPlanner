trigger: none
pool: 'TJP'
  #vmImage: 'ubuntu latest'

variables:
  dockerRegistryServiceConnection: 'TJPCRPROD'
  buildVersion: '0.1.$(Build.BuildId)'
  keyVaultName: 'TJP-INFRA-KV-DEV'
  dockerRegistry: 'TJPCRPROD'
  azureSubscription: 'TJPDevOps-CN'

steps:
  - checkout: self

  # Put settings with Azure Artifacts repository
  - task: DownloadSecureFile@1
    displayName: 'Copy Maven authorization for Sk√•netrafiken Maven repository'
    name: settingsSecurityxml
    inputs:
      secureFile: settings-security.xml

  - bash: cp -p $(settingsSecurityxml.secureFilePath) /tmp/settings-security.xml
    displayName: 'Copy Maven authorization configuration to Maven home directory'

  # Build Java project
  - task: Maven@3
    inputs:
      goals: 'clean package'
      mavenAuthenticateFeed: true
      options: '-Pjunit-report --settings docker-build/azure-deploy/settings.xml -Dsettings.security=/tmp/settings-security.xml -B -U -X'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      mavenOptions: '-Xmx1G' # Build agents are limited to 2Gb
  # Publish Code Coverage report
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'
      reportDirectory: $(System.DefaultWorkingDirectory)/target/site/jacoco-ut/**/*.*
      summaryFileLocation: $(System.DefaultWorkingDirectory)/target/site/jacoco-ut/jacoco.xml
  - template: templates/deployment_steps.yaml
